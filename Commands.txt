Build Dockerfile : docker build -t user-defined-image-name .

Run Container : docker run -d -p 80 --name user-define-conatiner-name image-name

Run docker-compose.yaml : docker-compose up -d

To Run All Containers at once : docker restart $(docker ps -a -q)

To Push image to the Docker Registery :

	--> commit the container with image : docker container commit <container-id> <new/same-image-name>:tag (latest)    
	--> first tag the image to repo in dockerhub : docker tag <new/same-image-name> scriptwithabhi/<new/same-image-name>
	--> pushing the image to registry :  docker push scriptwithabhi/docker-compose-web-1-finalwebapp

To Run container with fix Memory/CPU :

	--> memory : docker run -d --memory='256m' --name <container-name> <image-name>
                     docker stats <container-id/container-name>
  	--> CPU :    docker run -d --cpus=0.5 --name <container-name> <image-name>
 		     inspect CPU : docker inspect <container-id/container-name> | grep NanoCpus

------------------------------------------------------------------Volumes-----------------------------------------------------------------------------------

Create volume : docker volume create <volume-name>

Inspecting Docker Volume : docker volume inspect <volume-name>

Attach volume to container :  docker run -it -v <volume-name>:/shared-volume --name <containerId or ContainerName> ubuntu

ls--->
bin   dev  home  lib32  libx32  mnt  proc  run   shared-volume  sys  usr
boot  etc  lib   lib64  media   opt  root  sbin  srv            tmp  var

Create text-file inside shared-volume folder :ls > cd shared-volume > echo "hi this is shared-volume sample file" > shared-volume.txt

------------------------------------------------------------------Networks----------------------------------------------------------------------------------

Create a network : docker network create --driver bridge superman-net

Connect containers via network :  docker network connect superman-net  final-web-app
				  docker network connect superman-net  webfile004

Checking containers if they  are connected : docker exec -it webfile004 bash
					     installing ping inside the container : apt install iputils-ping 	
					     pinging another container : ping final-web-app
#output --> root@9acab649e2e2:/# ping final-web-ap
root@9acab649e2e2:/# ping final-web-app
PING final-web-app (172.20.0.2) 56(84) bytes of data.
64 bytes from final-web-app.superman-net (172.20.0.2): icmp_seq=1 ttl=64 time=0.110 ms
64 bytes from final-web-app.superman-net (172.20.0.2): icmp_seq=2 ttl=64 time=0.148 ms
64 bytes from final-web-app.superman-net (172.20.0.2): icmp_seq=3 ttl=64 time=0.073 ms
64 bytes from final-web-app.superman-net (172.20.0.2): icmp_seq=4 ttl=64 time=0.084 ms
^C
--- final-web-app ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time 3123ms
rtt min/avg/max/mdev = 0.073/0.103/0.148/0.031 ms
root@9acab649e2e2:/# exit
